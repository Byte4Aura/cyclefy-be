enum BarterStatus {
    waiting_for_request
    waiting_for_confirmation
    confirmed
    completed
    cancelled
}

// BARTERS
model Barter {
    id          Int      @id @default(autoincrement())
    user        User     @relation(fields: [user_id], references: [id])
    user_id     Int
    item_name   String   @db.VarChar(255)
    description String   @db.Text
    address     Address  @relation(fields: [address_id], references: [id])
    address_id  Int
    category    Category @relation(fields: [category_id], references: [id])
    category_id Int
    phone       Phone    @relation(fields: [phone_id], references: [id])
    phone_id    Int
    // status        BarterStatus @default(posted)
    // status_detail String       @db.VarChar(255)
    created_at  DateTime @default(now())
    updated_at  DateTime @updatedAt

    images                BarterImage[]
    applications          BarterApplication[]
    barterStatusHistories BarterStatusHistory[]

    @@map("barters")
}

model BarterStatusHistory {
    id            Int          @id @default(autoincrement())
    barter        Barter       @relation(fields: [barter_id], references: [id])
    barter_id     Int
    status        BarterStatus @default(waiting_for_request)
    status_detail String       @db.VarChar(255)
    created_at    DateTime     @default(now())
    updated_at    DateTime     @updatedAt
    updated       User?        @relation(fields: [updated_by], references: [id])
    updated_by    Int?

    @@map("barter_status_histories")
}

// BARTER_IMAGES
model BarterImage {
    id         Int      @id @default(autoincrement())
    barter     Barter   @relation(fields: [barter_id], references: [id])
    barter_id  Int
    image_path String   @db.VarChar(255)
    image_name String   @db.VarChar(255)
    image_size Int
    created_at DateTime @default(now())

    @@map("barter_images")
}

enum BarterApplicationStatus {
    request_submitted
    confirmed
    completed
    cancelled
}

// BARTER_APPLICATIONS
model BarterApplication {
    id             Int      @id @default(autoincrement())
    barter         Barter   @relation(fields: [barter_id], references: [id])
    barter_id      Int
    user           User     @relation(fields: [user_id], references: [id])
    user_id        Int
    item_name      String   @db.VarChar(255)
    description    String   @db.Text
    address        Address  @relation(fields: [address_id], references: [id])
    address_id     Int
    category       Category @relation(fields: [category_id], references: [id])
    category_id    Int
    phone          Phone    @relation(fields: [phone_id], references: [id])
    phone_id       Int
    // status        BarterApplicationStatus @default(request_submitted)
    // status_detail String                  @db.VarChar(255)
    decline_reason String   @db.VarChar(255)
    created_at     DateTime @default(now())
    updated_at     DateTime @updatedAt

    images                           BarterApplicationImage[]
    barterApplicationStatusHistories BarterApplicationStatusHistory[]

    @@map("barter_applications")
}

model BarterApplicationStatusHistory {
    id                    Int                     @id @default(autoincrement())
    barter_application    BarterApplication       @relation(fields: [barter_application_id], references: [id])
    barter_application_id Int
    status                BarterApplicationStatus @default(request_submitted)
    status_detail         String                  @db.VarChar(255)
    created_at            DateTime                @default(now())
    updated_at            DateTime                @updatedAt
    updated               User?                   @relation(fields: [updated_by], references: [id])
    updated_by            Int?

    @@map("barter_application_status_histories")
}

// BARTER_APPLICATIONS_IMAGES
model BarterApplicationImage {
    id                    Int               @id @default(autoincrement())
    barter_application    BarterApplication @relation(fields: [barter_application_id], references: [id])
    barter_application_id Int
    image_path            String            @db.VarChar(255)
    image_name            String            @db.VarChar(255)
    image_size            Int
    created_at            DateTime          @default(now())

    @@map("barter_application_images")
}
